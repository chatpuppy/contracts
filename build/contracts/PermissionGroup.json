{
  "contractName": "PermissionGroup",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "potentialOwner",
          "type": "address"
        }
      ],
      "name": "OwnerNominated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "nominatePotentialOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "operators",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "potentialOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"potentialOwner\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"nominatePotentialOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operators\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"potentialOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"potentialOwner()\":{\"details\":\"Returns the address of the current potentialOwner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addOperator(address)\":{\"notice\":\"Adds an address as operator.\"},\"removeOperator(address)\":{\"notice\":\"Removes an address as operator.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/lib/PermissionGroup.sol\":\"PermissionGroup\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/lib/Context.sol\":{\"keccak256\":\"0xf4c2b346eff8d50513853dfbf4a8ec1916c650000fe8a4106914d326fa528685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66642839100e35279b5fe781071ec750bf40ac0cc54275f5676f03a004da2e04\",\"dweb:/ipfs/QmYwPV67tYZeLURPhUhyKsF41w39PHUmQfB3j6zkajyLFL\"]},\"project:/contracts/lib/Ownable.sol\":{\"keccak256\":\"0xe1cda810af16d46a5dc91f2419f17eb7e05a00520a39d8214e496fa900df35c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f7cf7444e3e92b5ef2ead7a9af8f40acf448f268368d2d7574cc6a0bc86eae4\",\"dweb:/ipfs/QmecuPPBV6qf71KWdNWzRTJcNHUVNzM6CvD9GE6SNAduaw\"]},\"project:/contracts/lib/PermissionGroup.sol\":{\"keccak256\":\"0x7a4a32ec2af7bd47c55ff18caf4a33069021cfc79b0932ce9186a15daac5899a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04e50bbed5cb7428db4226e8ebf0cfc7772c9c4bf3cb13db1b6fc4f891813af9\",\"dweb:/ipfs/QmUiQNLZdYCtyqxDL81pSf5gZxrGC4q5nnnwFUio4yLxZu\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b610cc7806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806379ba50971161006657806379ba50971461010c5780638da5cb5b146101165780639870d7fe14610134578063ac8a584a14610150578063f2fde38b1461016c57610093565b806313e7c9d81461009857806352c043c1146100c8578063715018a6146100e45780637762df25146100ee575b600080fd5b6100b260048036038101906100ad9190610a3d565b610188565b6040516100bf9190610a85565b60405180910390f35b6100e260048036038101906100dd9190610a3d565b6101a8565b005b6100ec6102b8565b005b6100f661040b565b6040516101039190610aaf565b60405180910390f35b610114610435565b005b61011e610607565b60405161012b9190610aaf565b60405180910390f35b61014e60048036038101906101499190610a3d565b610630565b005b61016a60048036038101906101659190610a3d565b610720565b005b61018660048036038101906101819190610a3d565b610810565b005b60026020528060005260406000206000915054906101000a900460ff1681565b6101b06109d2565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610b27565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22816040516102ad9190610aaf565b60405180910390a150565b6102c06109d2565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461034d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034490610b27565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bc90610bdf565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106386109d2565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bc90610b27565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6107286109d2565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ac90610b27565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6108186109d2565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c90610b27565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090c90610c71565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a0a826109df565b9050919050565b610a1a816109ff565b8114610a2557600080fd5b50565b600081359050610a3781610a11565b92915050565b600060208284031215610a5357610a526109da565b5b6000610a6184828501610a28565b91505092915050565b60008115159050919050565b610a7f81610a6a565b82525050565b6000602082019050610a9a6000830184610a76565b92915050565b610aa9816109ff565b82525050565b6000602082019050610ac46000830184610aa0565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610b11602083610aca565b9150610b1c82610adb565b602082019050919050565b60006020820190508181036000830152610b4081610b04565b9050919050565b7f596f75206d757374206265206e6f6d696e6174656420617320706f74656e746960008201527f616c206f776e6572206265666f726520796f752063616e20616363657074206f60208201527f776e657273686970000000000000000000000000000000000000000000000000604082015250565b6000610bc9604883610aca565b9150610bd482610b47565b606082019050919050565b60006020820190508181036000830152610bf881610bbc565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c5b602683610aca565b9150610c6682610bff565b604082019050919050565b60006020820190508181036000830152610c8a81610c4e565b905091905056fea26469706673582212202bb768df1fff2abc10901028dc6788efcb9a80dd77d4a6d8725bd150de9e16b664736f6c63430008080033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c806379ba50971161006657806379ba50971461010c5780638da5cb5b146101165780639870d7fe14610134578063ac8a584a14610150578063f2fde38b1461016c57610093565b806313e7c9d81461009857806352c043c1146100c8578063715018a6146100e45780637762df25146100ee575b600080fd5b6100b260048036038101906100ad9190610a3d565b610188565b6040516100bf9190610a85565b60405180910390f35b6100e260048036038101906100dd9190610a3d565b6101a8565b005b6100ec6102b8565b005b6100f661040b565b6040516101039190610aaf565b60405180910390f35b610114610435565b005b61011e610607565b60405161012b9190610aaf565b60405180910390f35b61014e60048036038101906101499190610a3d565b610630565b005b61016a60048036038101906101659190610a3d565b610720565b005b61018660048036038101906101819190610a3d565b610810565b005b60026020528060005260406000206000915054906101000a900460ff1681565b6101b06109d2565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610b27565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22816040516102ad9190610aaf565b60405180910390a150565b6102c06109d2565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461034d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034490610b27565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bc90610bdf565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106386109d2565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bc90610b27565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6107286109d2565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ac90610b27565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6108186109d2565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c90610b27565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090c90610c71565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a0a826109df565b9050919050565b610a1a816109ff565b8114610a2557600080fd5b50565b600081359050610a3781610a11565b92915050565b600060208284031215610a5357610a526109da565b5b6000610a6184828501610a28565b91505092915050565b60008115159050919050565b610a7f81610a6a565b82525050565b6000602082019050610a9a6000830184610a76565b92915050565b610aa9816109ff565b82525050565b6000602082019050610ac46000830184610aa0565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610b11602083610aca565b9150610b1c82610adb565b602082019050919050565b60006020820190508181036000830152610b4081610b04565b9050919050565b7f596f75206d757374206265206e6f6d696e6174656420617320706f74656e746960008201527f616c206f776e6572206265666f726520796f752063616e20616363657074206f60208201527f776e657273686970000000000000000000000000000000000000000000000000604082015250565b6000610bc9604883610aca565b9150610bd482610b47565b606082019050919050565b60006020820190508181036000830152610bf881610bbc565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c5b602683610aca565b9150610c6682610bff565b604082019050919050565b60006020820190508181036000830152610c8a81610c4e565b905091905056fea26469706673582212202bb768df1fff2abc10901028dc6788efcb9a80dd77d4a6d8725bd150de9e16b664736f6c63430008080033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5239:51",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:51",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:51"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:51",
                "type": ""
              }
            ],
            "src": "7:75:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:51",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:51",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:51"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:51",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:51",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:51"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:51",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:51"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:51"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:51",
                "type": ""
              }
            ],
            "src": "334:126:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:51"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:51"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:51",
                "type": ""
              }
            ],
            "src": "466:96:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:51"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:51"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:51"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:51"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:51"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:51",
                "type": ""
              }
            ],
            "src": "568:122:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:51"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:51"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:51",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:51",
                "type": ""
              }
            ],
            "src": "696:139:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:51"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:51",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:51",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:51",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:51",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:51",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:51"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:51"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:51"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:51"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:51"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:51"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:51",
                "type": ""
              }
            ],
            "src": "841:329:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1218:48:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1228:32:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1253:5:51"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1246:6:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1246:13:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1239:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1239:21:51"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1228:7:51"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1200:5:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1210:7:51",
                "type": ""
              }
            ],
            "src": "1176:90:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1331:50:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1348:3:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1368:5:51"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1353:14:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1353:21:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1341:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1341:34:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1341:34:51"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1319:5:51",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1326:3:51",
                "type": ""
              }
            ],
            "src": "1272:109:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1479:118:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1489:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1501:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1512:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1497:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1497:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1489:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1563:6:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1576:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1587:1:51",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1572:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1572:17:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1525:37:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1525:65:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1525:65:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1451:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1463:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1474:4:51",
                "type": ""
              }
            ],
            "src": "1387:210:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1668:53:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1685:3:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1708:5:51"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1690:17:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1690:24:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1678:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1678:37:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1678:37:51"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1656:5:51",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1663:3:51",
                "type": ""
              }
            ],
            "src": "1603:118:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1825:124:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1835:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1847:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1858:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1843:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1843:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1835:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1915:6:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1928:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1939:1:51",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1924:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1924:17:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1871:43:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1871:71:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1871:71:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1797:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1809:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1820:4:51",
                "type": ""
              }
            ],
            "src": "1727:222:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2051:73:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2068:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2073:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2061:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2061:19:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2061:19:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2089:29:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2108:3:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2113:4:51",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2104:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2104:14:51"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2089:11:51"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2023:3:51",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2028:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2039:11:51",
                "type": ""
              }
            ],
            "src": "1955:169:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2236:76:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2258:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2266:1:51",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2254:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2254:14:51"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2270:34:51",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2247:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2247:58:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2247:58:51"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2228:6:51",
                "type": ""
              }
            ],
            "src": "2130:182:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2464:220:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2474:74:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2540:3:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2545:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2481:58:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2481:67:51"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2474:3:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2646:3:51"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "2557:88:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2557:93:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2557:93:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2659:19:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2670:3:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2675:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2666:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2666:12:51"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2659:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2452:3:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2460:3:51",
                "type": ""
              }
            ],
            "src": "2318:366:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2861:248:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2871:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2883:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2894:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2879:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2879:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2871:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2918:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2929:1:51",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2914:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2914:17:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2937:4:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2943:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2933:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2933:20:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2907:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2907:47:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2907:47:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2963:139:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3097:4:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2971:124:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2971:131:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2963:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2841:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2856:4:51",
                "type": ""
              }
            ],
            "src": "2690:419:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3221:190:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3243:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3251:1:51",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3239:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3239:14:51"
                      },
                      {
                        "hexValue": "596f75206d757374206265206e6f6d696e6174656420617320706f74656e7469",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3255:34:51",
                        "type": "",
                        "value": "You must be nominated as potenti"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3232:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3232:58:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3232:58:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3311:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3319:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3307:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3307:15:51"
                      },
                      {
                        "hexValue": "616c206f776e6572206265666f726520796f752063616e20616363657074206f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3324:34:51",
                        "type": "",
                        "value": "al owner before you can accept o"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3300:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3300:59:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3300:59:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3380:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3388:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3376:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3376:15:51"
                      },
                      {
                        "hexValue": "776e657273686970",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3393:10:51",
                        "type": "",
                        "value": "wnership"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3369:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3369:35:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3369:35:51"
                }
              ]
            },
            "name": "store_literal_in_memory_c3cd58d7a8114a4d8459714bc1f4cad2ba7d1dd5bb094dd33c72c8a8904dafea",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3213:6:51",
                "type": ""
              }
            ],
            "src": "3115:296:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3563:220:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3573:74:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3639:3:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3644:2:51",
                        "type": "",
                        "value": "72"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3580:58:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3580:67:51"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3573:3:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3745:3:51"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c3cd58d7a8114a4d8459714bc1f4cad2ba7d1dd5bb094dd33c72c8a8904dafea",
                      "nodeType": "YulIdentifier",
                      "src": "3656:88:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3656:93:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3656:93:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3758:19:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3769:3:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3774:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3765:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3765:12:51"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3758:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c3cd58d7a8114a4d8459714bc1f4cad2ba7d1dd5bb094dd33c72c8a8904dafea_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3551:3:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3559:3:51",
                "type": ""
              }
            ],
            "src": "3417:366:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3960:248:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3970:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3982:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3993:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3978:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3978:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3970:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4017:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4028:1:51",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4013:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4013:17:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4036:4:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4042:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4032:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4032:20:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4006:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4006:47:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4006:47:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4062:139:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4196:4:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c3cd58d7a8114a4d8459714bc1f4cad2ba7d1dd5bb094dd33c72c8a8904dafea_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4070:124:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4070:131:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4062:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c3cd58d7a8114a4d8459714bc1f4cad2ba7d1dd5bb094dd33c72c8a8904dafea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3940:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3955:4:51",
                "type": ""
              }
            ],
            "src": "3789:419:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4320:119:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4342:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4350:1:51",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4338:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4338:14:51"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4354:34:51",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4331:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4331:58:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4331:58:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4410:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4418:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4406:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4406:15:51"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4423:8:51",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4399:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4399:33:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4399:33:51"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4312:6:51",
                "type": ""
              }
            ],
            "src": "4214:225:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4591:220:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4601:74:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4667:3:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4672:2:51",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4608:58:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4608:67:51"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4601:3:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4773:3:51"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "4684:88:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4684:93:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4684:93:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4786:19:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4797:3:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4802:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4793:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4793:12:51"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4786:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4579:3:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4587:3:51",
                "type": ""
              }
            ],
            "src": "4445:366:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4988:248:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4998:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5010:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5021:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5006:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5006:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4998:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5045:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5056:1:51",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5041:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5041:17:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5064:4:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5070:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5060:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5060:20:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5034:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5034:47:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5034:47:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5090:139:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5224:4:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5098:124:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5098:131:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5090:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4968:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4983:4:51",
                "type": ""
              }
            ],
            "src": "4817:419:51"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c3cd58d7a8114a4d8459714bc1f4cad2ba7d1dd5bb094dd33c72c8a8904dafea(memPtr) {\n\n        mstore(add(memPtr, 0), \"You must be nominated as potenti\")\n\n        mstore(add(memPtr, 32), \"al owner before you can accept o\")\n\n        mstore(add(memPtr, 64), \"wnership\")\n\n    }\n\n    function abi_encode_t_stringliteral_c3cd58d7a8114a4d8459714bc1f4cad2ba7d1dd5bb094dd33c72c8a8904dafea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 72)\n        store_literal_in_memory_c3cd58d7a8114a4d8459714bc1f4cad2ba7d1dd5bb094dd33c72c8a8904dafea(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c3cd58d7a8114a4d8459714bc1f4cad2ba7d1dd5bb094dd33c72c8a8904dafea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c3cd58d7a8114a4d8459714bc1f4cad2ba7d1dd5bb094dd33c72c8a8904dafea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 51,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "105:615:31:-:0;;;;;;;;;;;;;945:17:29;965:12;:10;;;:12;;:::i;:::-;945:32;;996:9;987:6;;:18;;;;;;;;;;;;;;;;;;1053:9;1020:43;;1049:1;1020:43;;;;;;;;;;;;935:135;105:615:31;;588:96:24;641:7;667:10;660:17;;588:96;:::o;105:615:31:-;;;;;;;",
  "deployedSourceMap": "105:615:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;216:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2489:157:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1949:145;;;:::i;:::-;;1308:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2652:306;;;:::i;:::-;;1146:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;445:101:31;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;613:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2243:240:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;216:41:31;;;;;;;;;;;;;;;;;;;;;;:::o;2489:157:29:-;1540:12;:10;:12::i;:::-;1530:22;;:6;;;;;;;;;;:22;;;1522:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2592:8:::1;2574:15;;:26;;;;;;;;;;;;;;;;;;2615:24;2630:8;2615:24;;;;;;:::i;:::-;;;;;;;;2489:157:::0;:::o;1949:145::-;1540:12;:10;:12::i;:::-;1530:22;;:6;;;;;;;;;;:22;;;1522:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2055:1:::1;2018:40;;2039:6;::::0;::::1;;;;;;;;2018:40;;;;;;;;;;;;2085:1;2068:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1949:145::o:0;1308:95::-;1355:7;1381:15;;;;;;;;;;;1374:22;;1308:95;:::o;2652:306::-;2727:15;;;;;;;;;;;2713:29;;:10;:29;;;2705:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;2863:15;;;;;;;;;;;2834:45;;2855:6;;;;;;;;;;2834:45;;;;;;;;;;;;2898:15;;;;;;;;;;;2889:6;;:24;;;;;;;;;;;;;;;;;;2949:1;2923:15;;:28;;;;;;;;;;;;;;;;;;2652:306::o;1146:77::-;1184:7;1210:6;;;;;;;;;;;1203:13;;1146:77;:::o;445:101:31:-;1540:12:29;:10;:12::i;:::-;1530:22;;:6;;;;;;;;;;:22;;;1522:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;535:4:31::1;513:9;:19;523:8;513:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;445:101:::0;:::o;613:105::-;1540:12:29;:10;:12::i;:::-;1530:22;;:6;;;;;;;;;;:22;;;1522:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;706:5:31::1;684:9;:19;694:8;684:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;613:105:::0;:::o;2243:240:29:-;1540:12;:10;:12::i;:::-;1530:22;;:6;;;;;;;;;;:22;;;1522:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2351:1:::1;2331:22;;:8;:22;;;;2323:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2440:8;2411:38;;2432:6;::::0;::::1;;;;;;;;2411:38;;;;;;;;;;;;2468:8;2459:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2243:240:::0;:::o;588:96:24:-;641:7;667:10;660:17;;588:96;:::o;88:117:51:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:118::-;1690:24;1708:5;1690:24;:::i;:::-;1685:3;1678:37;1603:118;;:::o;1727:222::-;1820:4;1858:2;1847:9;1843:18;1835:26;;1871:71;1939:1;1928:9;1924:17;1915:6;1871:71;:::i;:::-;1727:222;;;;:::o;1955:169::-;2039:11;2073:6;2068:3;2061:19;2113:4;2108:3;2104:14;2089:29;;1955:169;;;;:::o;2130:182::-;2270:34;2266:1;2258:6;2254:14;2247:58;2130:182;:::o;2318:366::-;2460:3;2481:67;2545:2;2540:3;2481:67;:::i;:::-;2474:74;;2557:93;2646:3;2557:93;:::i;:::-;2675:2;2670:3;2666:12;2659:19;;2318:366;;;:::o;2690:419::-;2856:4;2894:2;2883:9;2879:18;2871:26;;2943:9;2937:4;2933:20;2929:1;2918:9;2914:17;2907:47;2971:131;3097:4;2971:131;:::i;:::-;2963:139;;2690:419;;;:::o;3115:296::-;3255:34;3251:1;3243:6;3239:14;3232:58;3324:34;3319:2;3311:6;3307:15;3300:59;3393:10;3388:2;3380:6;3376:15;3369:35;3115:296;:::o;3417:366::-;3559:3;3580:67;3644:2;3639:3;3580:67;:::i;:::-;3573:74;;3656:93;3745:3;3656:93;:::i;:::-;3774:2;3769:3;3765:12;3758:19;;3417:366;;;:::o;3789:419::-;3955:4;3993:2;3982:9;3978:18;3970:26;;4042:9;4036:4;4032:20;4028:1;4017:9;4013:17;4006:47;4070:131;4196:4;4070:131;:::i;:::-;4062:139;;3789:419;;;:::o;4214:225::-;4354:34;4350:1;4342:6;4338:14;4331:58;4423:8;4418:2;4410:6;4406:15;4399:33;4214:225;:::o;4445:366::-;4587:3;4608:67;4672:2;4667:3;4608:67;:::i;:::-;4601:74;;4684:93;4773:3;4684:93;:::i;:::-;4802:2;4797:3;4793:12;4786:19;;4445:366;;;:::o;4817:419::-;4983:4;5021:2;5010:9;5006:18;4998:26;;5070:9;5064:4;5060:20;5056:1;5045:9;5041:17;5034:47;5098:131;5224:4;5098:131;:::i;:::-;5090:139;;4817:419;;;:::o",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.8;\n\nimport \"./Ownable.sol\";\nimport \"./Context.sol\";\n\ncontract PermissionGroup is Ownable {\n    // List of authorized address to perform some restricted actions\n    mapping(address => bool) public operators;\n\n    modifier onlyOperator() {\n        require(operators[msg.sender], \"PermissionGroup: not operator\");\n        _;\n    }\n\n    /**\n     * @notice Adds an address as operator.\n     */\n    function addOperator(address operator) external onlyOwner {\n        operators[operator] = true;\n    }\n\n    /**\n    * @notice Removes an address as operator.\n    */\n    function removeOperator(address operator) external onlyOwner {\n        operators[operator] = false;\n    }\n}",
  "sourcePath": "/Users/guqianfeng/web/my_dapps/chainline/contracts/contracts/lib/PermissionGroup.sol",
  "ast": {
    "absolutePath": "project:/contracts/lib/PermissionGroup.sol",
    "exportedSymbols": {
      "Context": [
        7118
      ],
      "Ownable": [
        8598
      ],
      "PermissionGroup": [
        8743
      ]
    },
    "id": 8744,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8692,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:31"
      },
      {
        "absolutePath": "project:/contracts/lib/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 8693,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8744,
        "sourceUnit": 8599,
        "src": "56:23:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lib/Context.sol",
        "file": "./Context.sol",
        "id": 8694,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8744,
        "sourceUnit": 7119,
        "src": "80:23:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8695,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8598,
              "src": "133:7:31"
            },
            "id": 8696,
            "nodeType": "InheritanceSpecifier",
            "src": "133:7:31"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8743,
        "linearizedBaseContracts": [
          8743,
          8598,
          7118
        ],
        "name": "PermissionGroup",
        "nameLocation": "114:15:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "13e7c9d8",
            "id": 8700,
            "mutability": "mutable",
            "name": "operators",
            "nameLocation": "248:9:31",
            "nodeType": "VariableDeclaration",
            "scope": 8743,
            "src": "216:41:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 8699,
              "keyType": {
                "id": 8697,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "224:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "216:24:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 8698,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "235:4:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8711,
              "nodeType": "Block",
              "src": "288:91:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 8703,
                          "name": "operators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8700,
                          "src": "306:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 8706,
                        "indexExpression": {
                          "expression": {
                            "id": 8704,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "316:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "316:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "306:21:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5065726d697373696f6e47726f75703a206e6f74206f70657261746f72",
                        "id": 8707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "329:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6acc5cf193df8f44d999b413d435eb31213b296c6dd0bfd58b04e936d063f5b",
                          "typeString": "literal_string \"PermissionGroup: not operator\""
                        },
                        "value": "PermissionGroup: not operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6acc5cf193df8f44d999b413d435eb31213b296c6dd0bfd58b04e936d063f5b",
                          "typeString": "literal_string \"PermissionGroup: not operator\""
                        }
                      ],
                      "id": 8702,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "298:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "298:63:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8709,
                  "nodeType": "ExpressionStatement",
                  "src": "298:63:31"
                },
                {
                  "id": 8710,
                  "nodeType": "PlaceholderStatement",
                  "src": "371:1:31"
                }
              ]
            },
            "id": 8712,
            "name": "onlyOperator",
            "nameLocation": "273:12:31",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "285:2:31"
            },
            "src": "264:115:31",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8726,
              "nodeType": "Block",
              "src": "503:43:31",
              "statements": [
                {
                  "expression": {
                    "id": 8724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8720,
                        "name": "operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8700,
                        "src": "513:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 8722,
                      "indexExpression": {
                        "id": 8721,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8715,
                        "src": "523:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "513:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 8723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "535:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "513:26:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8725,
                  "nodeType": "ExpressionStatement",
                  "src": "513:26:31"
                }
              ]
            },
            "documentation": {
              "id": 8713,
              "nodeType": "StructuredDocumentation",
              "src": "385:55:31",
              "text": " @notice Adds an address as operator."
            },
            "functionSelector": "9870d7fe",
            "id": 8727,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8718,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8717,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8503,
                  "src": "493:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "493:9:31"
              }
            ],
            "name": "addOperator",
            "nameLocation": "454:11:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8715,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "474:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8727,
                  "src": "466:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "465:18:31"
            },
            "returnParameters": {
              "id": 8719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "503:0:31"
            },
            "scope": 8743,
            "src": "445:101:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8741,
              "nodeType": "Block",
              "src": "674:44:31",
              "statements": [
                {
                  "expression": {
                    "id": 8739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8735,
                        "name": "operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8700,
                        "src": "684:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 8737,
                      "indexExpression": {
                        "id": 8736,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8730,
                        "src": "694:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "684:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 8738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "706:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "684:27:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8740,
                  "nodeType": "ExpressionStatement",
                  "src": "684:27:31"
                }
              ]
            },
            "documentation": {
              "id": 8728,
              "nodeType": "StructuredDocumentation",
              "src": "552:56:31",
              "text": " @notice Removes an address as operator."
            },
            "functionSelector": "ac8a584a",
            "id": 8742,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8733,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8732,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8503,
                  "src": "664:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "664:9:31"
              }
            ],
            "name": "removeOperator",
            "nameLocation": "622:14:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8730,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "645:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8742,
                  "src": "637:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "636:18:31"
            },
            "returnParameters": {
              "id": 8734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "674:0:31"
            },
            "scope": 8743,
            "src": "613:105:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8744,
        "src": "105:615:31",
        "usedErrors": []
      }
    ],
    "src": "31:689:31"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/lib/PermissionGroup.sol",
    "exportedSymbols": {
      "Context": [
        7118
      ],
      "Ownable": [
        8598
      ],
      "PermissionGroup": [
        8743
      ]
    },
    "id": 8744,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8692,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:31"
      },
      {
        "absolutePath": "project:/contracts/lib/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 8693,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8744,
        "sourceUnit": 8599,
        "src": "56:23:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lib/Context.sol",
        "file": "./Context.sol",
        "id": 8694,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8744,
        "sourceUnit": 7119,
        "src": "80:23:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8695,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8598,
              "src": "133:7:31"
            },
            "id": 8696,
            "nodeType": "InheritanceSpecifier",
            "src": "133:7:31"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8743,
        "linearizedBaseContracts": [
          8743,
          8598,
          7118
        ],
        "name": "PermissionGroup",
        "nameLocation": "114:15:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "13e7c9d8",
            "id": 8700,
            "mutability": "mutable",
            "name": "operators",
            "nameLocation": "248:9:31",
            "nodeType": "VariableDeclaration",
            "scope": 8743,
            "src": "216:41:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 8699,
              "keyType": {
                "id": 8697,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "224:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "216:24:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 8698,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "235:4:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8711,
              "nodeType": "Block",
              "src": "288:91:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 8703,
                          "name": "operators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8700,
                          "src": "306:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 8706,
                        "indexExpression": {
                          "expression": {
                            "id": 8704,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "316:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "316:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "306:21:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5065726d697373696f6e47726f75703a206e6f74206f70657261746f72",
                        "id": 8707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "329:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6acc5cf193df8f44d999b413d435eb31213b296c6dd0bfd58b04e936d063f5b",
                          "typeString": "literal_string \"PermissionGroup: not operator\""
                        },
                        "value": "PermissionGroup: not operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6acc5cf193df8f44d999b413d435eb31213b296c6dd0bfd58b04e936d063f5b",
                          "typeString": "literal_string \"PermissionGroup: not operator\""
                        }
                      ],
                      "id": 8702,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "298:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "298:63:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8709,
                  "nodeType": "ExpressionStatement",
                  "src": "298:63:31"
                },
                {
                  "id": 8710,
                  "nodeType": "PlaceholderStatement",
                  "src": "371:1:31"
                }
              ]
            },
            "id": 8712,
            "name": "onlyOperator",
            "nameLocation": "273:12:31",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "285:2:31"
            },
            "src": "264:115:31",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8726,
              "nodeType": "Block",
              "src": "503:43:31",
              "statements": [
                {
                  "expression": {
                    "id": 8724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8720,
                        "name": "operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8700,
                        "src": "513:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 8722,
                      "indexExpression": {
                        "id": 8721,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8715,
                        "src": "523:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "513:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 8723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "535:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "513:26:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8725,
                  "nodeType": "ExpressionStatement",
                  "src": "513:26:31"
                }
              ]
            },
            "documentation": {
              "id": 8713,
              "nodeType": "StructuredDocumentation",
              "src": "385:55:31",
              "text": " @notice Adds an address as operator."
            },
            "functionSelector": "9870d7fe",
            "id": 8727,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8718,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8717,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8503,
                  "src": "493:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "493:9:31"
              }
            ],
            "name": "addOperator",
            "nameLocation": "454:11:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8715,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "474:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8727,
                  "src": "466:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "465:18:31"
            },
            "returnParameters": {
              "id": 8719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "503:0:31"
            },
            "scope": 8743,
            "src": "445:101:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8741,
              "nodeType": "Block",
              "src": "674:44:31",
              "statements": [
                {
                  "expression": {
                    "id": 8739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8735,
                        "name": "operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8700,
                        "src": "684:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 8737,
                      "indexExpression": {
                        "id": 8736,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8730,
                        "src": "694:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "684:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 8738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "706:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "684:27:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8740,
                  "nodeType": "ExpressionStatement",
                  "src": "684:27:31"
                }
              ]
            },
            "documentation": {
              "id": 8728,
              "nodeType": "StructuredDocumentation",
              "src": "552:56:31",
              "text": " @notice Removes an address as operator."
            },
            "functionSelector": "ac8a584a",
            "id": 8742,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8733,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8732,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8503,
                  "src": "664:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "664:9:31"
              }
            ],
            "name": "removeOperator",
            "nameLocation": "622:14:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8730,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "645:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 8742,
                  "src": "637:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "636:18:31"
            },
            "returnParameters": {
              "id": 8734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "674:0:31"
            },
            "scope": 8743,
            "src": "613:105:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8744,
        "src": "105:615:31",
        "usedErrors": []
      }
    ],
    "src": "31:689:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.8+commit.dddeac2f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-02-01T14:05:17.820Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "potentialOwner()": {
        "details": "Returns the address of the current potentialOwner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addOperator(address)": {
        "notice": "Adds an address as operator."
      },
      "removeOperator(address)": {
        "notice": "Removes an address as operator."
      }
    },
    "version": 1
  }
}